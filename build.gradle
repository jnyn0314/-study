plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'umc'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

def querydsl_version = "5.1.0"
def generated = "src/main/generated"

dependencies {
	implementation 'com.oracle.database.jdbc:ojdbc11:21.9.0.0'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.hibernate.orm:hibernate-core:6.0.2.Final'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	runtimeOnly 'com.mysql:mysql-connector-j:8.2.0'

	implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'

	// QueryDSL
	implementation "com.querydsl:querydsl-jpa:${querydsl_version}:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:${querydsl_version}:jakarta"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api:2.1.1"

	// lombok
	compileOnly 'org.projectlombok:lombok:1.18.22'
	annotationProcessor 'org.projectlombok:lombok:1.18.22'


	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'


	implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
	implementation 'org.glassfish:jakarta.el:4.0.2' // Expression Language 지원도 필요함

	implementation 'org.springframework.boot:spring-boot-starter-security'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', generated]
		}
	}
}

tasks.withType(JavaCompile).configureEach {
	options.annotationProcessorGeneratedSourcesDirectory = file(generated)
}

// clean 시 Q 클래스 제거
tasks.named('clean') {
	doFirst {
		delete file(generated)
	}
}

tasks.register("compileQuerydsl", JavaCompile) {
	group = "build"
	description = "Compile Querydsl Q-classes"

	source = fileTree("src/main/java")
	classpath = sourceSets.main.compileClasspath
	destinationDirectory.set(file("src/main/generated"))

	options.annotationProcessorPath = configurations.annotationProcessor
}